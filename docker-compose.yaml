version: "3.8"

services:
  rabbitmq:
    image: rabbitmq:3.10.7-management
    hostname: rabbitmq
    restart: always
    environment:
      - RABBITMQ_DEFAULT_USER=rmuser
      - RABBITMQ_DEFAULT_PASS=rmpassword
      - RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS=-rabbit log_levels [{connection,error},{default,error}] disk_free_limit 2147483648
    volumes:
      - ./rabbitmq:/var/lib/rabbitmq
    expose:
      - "5672"
    ports:
      - "15672:15672"

  database:
    image: postgres:16-alpine
    restart: on-failure
    env_file:
      - .env
    expose:
      - "5432"
    volumes:
      - pg_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "-c", "pg_isready -U $POSTGRES_USER" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build: .
    tty: true
    volumes:
      - .:/app
    command: sh -c "python main.py"
    depends_on:
      database:
        condition: service_healthy
    env_file:
      - .env

  celery:
    build: .
    tty: true
    command: sh -c "celery -A src.app_celery.celery worker -l INFO"
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
      - database
    env_file:
      - .env

  celery-beat:
    build: .
    tty: true
    command: sh -c "celery -A src.app_celery.celery beat -s ~/app"
    restart: on-failure
    volumes:
      - .:/app
    depends_on:
      - rabbitmq
      - database
      - celery
    env_file:
      - .env

volumes:
  pg_data: